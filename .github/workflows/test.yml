name: Test

on:
    push:
        branches:
            - main

permissions:
    contents: write

jobs:
    test:
        runs-on: ${{ matrix.os }}
        strategy:
            fail-fast: false
            matrix:
                include:
                    - build: linux-x64
                      os: ubuntu-latest
                      target: x86_64-unknown-linux-gnu
                      artifact_name: "canary-probe-linux-amd64"
                    - build: linux-arm64
                      os: ubuntu-latest
                      target: aarch64-unknown-linux-gnu
                      artifact_name: "canary-probe-linux-arm64"
                    - build: macos-x64
                      os: macos-latest
                      target: x86_64-apple-darwin
                      artifact_name: "canary-probe-darwin-amd64"
                    - build: macos-arm64
                      os: macos-latest
                      target: aarch64-apple-darwin
                      artifact_name: "canary-probe-darwin-arm64"
                    - build: windows-x64
                      os: windows-latest
                      target: x86_64-pc-windows-msvc
                      artifact_name: "canary-probe-windows-amd64"
                    - build: linux-musl-x64
                      os: ubuntu-latest
                      target: x86_64-unknown-linux-musl
                      artifact_name: "canary-probe-linux-musl-amd64"
        steps:
            - name: Checkout Repository
              uses: actions/checkout@v4

            - uses: actions-rs/toolchain@v1
              with:
                  toolchain: stable
                  profile: minimal
                  target: ${{ matrix.target }}

            - name: Install musl-tools
              run: sudo apt update && sudo apt install -y musl-tools
              if: matrix.build == 'linux-musl-x64'

            - name: Install gcc-aarch64-linux-gnu
              run: |
                  sudo apt update
                  sudo apt install -y gcc-aarch64-linux-gnu
                  echo -e "[target.aarch64-unknown-linux-gnu]\nlinker = \"aarch64-linux-gnu-gcc\"" >> ~/.cargo/config.toml
              if: matrix.build == 'linux-arm64'

            - name: Build
              run: cargo build --release --target ${{ matrix.target }}
